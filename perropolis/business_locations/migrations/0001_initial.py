# Generated by Django 3.2.4 on 2021-06-26 08:38

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core_data', '0010_auto_20210624_2034'),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('rooms_count', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Rooms Count')),
                ('daycare_capacity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Daycare Capacity')),
                ('webcams_enabled', models.BooleanField(default=False, verbose_name='Webcams Enabled')),
                ('livestream_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Livestream Cost')),
                ('phone_number', models.CharField(max_length=24, verbose_name='Phone Number')),
                ('city', models.CharField(max_length=30, verbose_name='City')),
                ('address', models.CharField(max_length=256, verbose_name='Address')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True, verbose_name='Longitude')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core_data.country')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_locations', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updated_locations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'db_table': 'locations',
            },
        ),
        migrations.CreateModel(
            name='OpenSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_week_day', models.IntegerField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')], verbose_name='Start Week Day')),
                ('end_week_day', models.IntegerField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')], verbose_name='End Week Day')),
                ('start_hour', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23)], verbose_name='Start Hour')),
                ('end_hour', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23)], verbose_name='End Hour')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_open_schedules', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='business_locations.location', unique=True)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updated_open_schedules', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Open Schedule',
                'verbose_name_plural': 'Open Schedules',
                'db_table': 'open_schedules',
            },
        ),
        migrations.CreateModel(
            name='HotelRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_type', models.IntegerField(choices=[(1, 'Regular Size'), (2, 'Large Size')])),
                ('details', models.CharField(blank=True, max_length=512, null=True)),
                ('max_capacity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_hotel_rooms', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='business_locations.location', unique=True)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updated_hotel_rooms', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='openschedule',
            index=models.Index(fields=['location_id'], name='ix_location_schedule'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['country_id', 'name'], name='ix_location_name'),
        ),
        migrations.AlterUniqueTogether(
            name='location',
            unique_together={('country_id', 'name')},
        ),
        migrations.AddIndex(
            model_name='hotelroom',
            index=models.Index(fields=['location_id', 'room_type'], name='ix_location_room'),
        ),
        migrations.AddIndex(
            model_name='hotelroom',
            index=models.Index(fields=['room_type'], name='ix_room_hotel'),
        ),
        migrations.AlterUniqueTogether(
            name='hotelroom',
            unique_together={('location_id', 'room_type')},
        ),
    ]
