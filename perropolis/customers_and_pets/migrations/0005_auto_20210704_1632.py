# Generated by Django 3.2.4 on 2021-07-04 22:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('customers_and_pets', '0004_auto_20210704_1446'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='pet',
            name='owner',
        ),
        migrations.CreateModel(
            name='UserPet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('admin_created', models.BooleanField(verbose_name='Admin Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('admin_updated', models.BooleanField(verbose_name='Admin Updated')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_user_pets', to=settings.AUTH_USER_MODEL)),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='customers_and_pets.pet')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='updated_user_pets', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='customers_and_pets.customer')),
            ],
            options={
                'verbose_name': 'User Pet',
                'verbose_name_plural': 'Users Pets',
                'db_table': 'users_pets',
            },
        ),
        migrations.AddIndex(
            model_name='userpet',
            index=models.Index(fields=['user_id', 'pet_id'], name='ix_user_pets'),
        ),
        migrations.AlterUniqueTogether(
            name='userpet',
            unique_together={('user_id', 'pet_id')},
        ),
    ]
