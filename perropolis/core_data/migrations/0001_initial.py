# Generated by Django 3.2.4 on 2021-06-17 03:42

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Name')),
                ('logo_url', models.URLField(blank=True, null=True, verbose_name='Logo URL')),
                ('brand_type', models.IntegerField(choices=[('Food/Snacks', 'Food/Snacks'), ('Drugs', 'Drugs'), ('Accesories/Toys', 'Accesories/Toys')], max_length=32, verbose_name='Brand Type')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
                'db_table': 'brands',
            },
        ),
        migrations.CreateModel(
            name='Breed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('life_expectancy', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='Life Expectancy')),
                ('size', models.CharField(choices=[('Tea cup', 'Tea cup'), ('Small', 'Small'), ('Medium', 'Medium'), ('Large', 'Large'), ('GIANT', 'GIANT')], max_length=32)),
                ('health_score', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)], verbose_name='Healt Score')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Breed',
                'verbose_name_plural': 'Breeds',
                'db_table': 'breeds',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=5, verbose_name='Code')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Name')),
                ('taxes_percentage', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Taxes Percentage')),
                ('phone_number_code', models.CharField(max_length=5, verbose_name='Phone Number Code')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'db_table': 'countries',
            },
        ),
        migrations.CreateModel(
            name='MedicalAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Medical Action',
                'verbose_name_plural': 'Medical Actions',
                'db_table': 'medical_actions',
            },
        ),
        migrations.CreateModel(
            name='MedicalEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Medical Event',
                'verbose_name_plural': 'Medical events',
                'db_table': 'medical_events',
            },
        ),
        migrations.CreateModel(
            name='MedicatSpeciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('description', models.TextField(max_length=256, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Medical Speciality',
                'verbose_name_plural': 'Medical Specialities',
                'db_table': 'medical_specialities',
            },
        ),
        migrations.CreateModel(
            name='PetDrug',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('drug_type', models.CharField(choices=[('pills', 'Pills'), ('inyection', 'Inyection'), ('syrup', 'Syrup'), ('suppository', 'Suppository')], max_length=32, verbose_name='Drug Type')),
                ('admin_created', models.BooleanField(default=False, verbose_name='Admin Created')),
                ('admin_updated', models.BooleanField(default=False, verbose_name='Admin Updated')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('created_by', models.IntegerField(verbose_name='Created By')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('updated_by', models.IntegerField(verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Pet Drug',
                'verbose_name_plural': 'Pet Drugs',
                'db_table': 'pet_drugs',
            },
        ),
        migrations.CreateModel(
            name='PetFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Pet Food',
                'verbose_name_plural': 'Pet fods',
                'db_table': 'pet_foods',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('details', models.TextField(max_length=256, verbose_name='Details')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('created_by', models.IntegerField(verbose_name='Created By')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('updated_by', models.IntegerField(verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'db_table': 'services',
            },
        ),
        migrations.CreateModel(
            name='Specie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Specie',
                'verbose_name_plural': 'Species',
                'db_table': 'species',
            },
        ),
        migrations.CreateModel(
            name='Vet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('license_code', models.CharField(blank=True, max_length=30, null=True, verbose_name='License Code')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone_number', models.CharField(max_length=24, verbose_name='Phone Number')),
                ('has_facility', models.BooleanField(default=False, verbose_name='Has Facility')),
                ('home_visits', models.BooleanField(default=False, verbose_name='Home Visits')),
                ('receive_emergencies', models.BooleanField(default=False, verbose_name='Receive Emergencies')),
                ('address', models.TextField(verbose_name='Address')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core_data.country')),
            ],
            options={
                'verbose_name': 'Vet',
                'verbose_name_plural': 'Vets',
                'db_table': 'vets',
            },
        ),
        migrations.CreateModel(
            name='VetSpeciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('speciality', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core_data.medicatspeciality')),
                ('vet', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core_data.vet')),
            ],
            options={
                'verbose_name': 'Vet Speciality',
                'verbose_name_plural': 'Vet specialities',
                'db_table': 'vet_specialities',
            },
        ),
        migrations.AddIndex(
            model_name='specie',
            index=models.Index(fields=['name'], name='ix_species_name'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['name'], name='ix_service_name'),
        ),
        migrations.AddField(
            model_name='petfood',
            name='brand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core_data.brand'),
        ),
        migrations.AddField(
            model_name='petdrug',
            name='brand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core_data.brand'),
        ),
        migrations.AddIndex(
            model_name='medicatspeciality',
            index=models.Index(fields=['name'], name='ix_specialty_name'),
        ),
        migrations.AddIndex(
            model_name='medicalevent',
            index=models.Index(fields=['name'], name='ix_med_event_name'),
        ),
        migrations.AddField(
            model_name='medicalaction',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core_data.medicalevent'),
        ),
        migrations.AddIndex(
            model_name='country',
            index=models.Index(fields=['name'], name='ix_country_name'),
        ),
        migrations.AddField(
            model_name='breed',
            name='species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core_data.specie'),
        ),
        migrations.AddIndex(
            model_name='brand',
            index=models.Index(fields=['name'], name='ix_brand_name'),
        ),
        migrations.AddIndex(
            model_name='vetspeciality',
            index=models.Index(fields=['vet_id', 'speciality_id'], name='ix_specialty_vet'),
        ),
        migrations.AlterUniqueTogether(
            name='vetspeciality',
            unique_together={('vet_id', 'speciality_id')},
        ),
        migrations.AddIndex(
            model_name='vet',
            index=models.Index(fields=['name'], name='ix_vet_name'),
        ),
        migrations.AddIndex(
            model_name='vet',
            index=models.Index(fields=['country_id', 'license_code'], name='ix_vet_license'),
        ),
        migrations.AlterUniqueTogether(
            name='vet',
            unique_together={('country_id', 'license_code')},
        ),
        migrations.AddIndex(
            model_name='petfood',
            index=models.Index(fields=['brand_id', 'name'], name='ix_food_name'),
        ),
        migrations.AlterUniqueTogether(
            name='petfood',
            unique_together={('brand_id', 'name')},
        ),
        migrations.AddIndex(
            model_name='petdrug',
            index=models.Index(fields=['brand_id', 'name'], name='ix_drug_name'),
        ),
        migrations.AlterUniqueTogether(
            name='petdrug',
            unique_together={('brand_id', 'name')},
        ),
        migrations.AddIndex(
            model_name='medicalaction',
            index=models.Index(fields=['event_id', 'name'], name='ix_med_action_name'),
        ),
        migrations.AlterUniqueTogether(
            name='medicalaction',
            unique_together={('event_id', 'name')},
        ),
        migrations.AddIndex(
            model_name='breed',
            index=models.Index(fields=['species_id', 'name'], name='ix_breed_name'),
        ),
    ]
